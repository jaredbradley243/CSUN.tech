# Generated by Django 4.1.7 on 2023-05-30 02:19

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("projects", "0001_initial"),
        (
            "accounts",
            "0012_customuser_email_confirmed_customuser_is_professor_and_more",
        ),
    ]

    operations = [
        migrations.RemoveField(
            model_name="customuser",
            name="is_professor",
        ),
        migrations.RemoveField(
            model_name="customuser",
            name="is_student",
        ),
        migrations.RemoveField(
            model_name="customuser",
            name="is_team_lead",
        ),
        migrations.RemoveField(
            model_name="userprofile",
            name="is_volunteer",
        ),
        migrations.RemoveField(
            model_name="userprofile",
            name="resume",
        ),
        migrations.AddField(
            model_name="userprofile",
            name="bio",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="customuser",
            name="student_id",
            field=models.CharField(
                blank=True,
                max_length=9,
                null=True,
                unique=True,
                validators=[
                    django.core.validators.MinLengthValidator(9),
                    django.core.validators.MaxLengthValidator(9),
                ],
                verbose_name="Student ID",
            ),
        ),
        migrations.CreateModel(
            name="ProfessorProfile",
            fields=[
                (
                    "userprofile_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="accounts.userprofile",
                    ),
                ),
                ("rate_my_professor_link", models.URLField(blank=True, null=True)),
                ("csun_faculty_page_link", models.URLField(blank=True, null=True)),
                (
                    "projects",
                    models.ManyToManyField(
                        related_name="professors", to="projects.project"
                    ),
                ),
            ],
            bases=("accounts.userprofile",),
        ),
        migrations.CreateModel(
            name="StudentProfile",
            fields=[
                (
                    "userprofile_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="accounts.userprofile",
                    ),
                ),
                (
                    "team_lead",
                    models.BooleanField(blank=True, default=False, verbose_name="lead"),
                ),
                (
                    "is_volunteer",
                    models.BooleanField(default=False, verbose_name="volunteer"),
                ),
                (
                    "resume",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="resumes/",
                        validators=[
                            django.core.validators.FileExtensionValidator(["pdf"])
                        ],
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="students",
                        to="projects.project",
                    ),
                ),
            ],
            bases=("accounts.userprofile",),
        ),
    ]
